type User {
  id: ID! @id
  avatar : String
  nickname: String! @unique
  email : String! @unique
  firstName: String @default(value:"")
  lastName: String
  bio: String
  post: [Post!]! @relation(name:"PostOfUser", onDelete:CASCADE)
  comments :[Comment!]! @relation(name:"CommentOfUser", onDelete:CASCADE)
  likes:[Like!]! @relation(name:"LikeOfUser", onDelete:CASCADE)
  followers:[User!]! @relation(name:"FollowRelation")
  following:[User!]! @relation(name:"FollowRelation")
  rooms: [Room!]!
  loginSecret:String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post{
  id: ID! @id
  location:String 
  caption:String! 
  likes:[Like!]! @relation(name:"LikeOfPost", onDelete: CASCADE)
  files:[File!]! @relation(name:"FileOfPost", onDelete: CASCADE)
  comments :[Comment!]! @relation(name:"CommentOfPost", onDelete: CASCADE)
  user:User @relation(name:"PostOfUser")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like{
  id: ID! @id
  user:User @relation(name:"LikeOfUser")
  post:Post @relation(name:"LikeOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment{
  id: ID! @id
  text:String! 
  user:User @relation(name:"CommentOfUser")
  post:Post @relation(name:"CommentOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File{
  id: ID! @id
  url:String! 
  post:Post @relation(name:"FileOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants:[User!]!
  messages:[Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message{
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
